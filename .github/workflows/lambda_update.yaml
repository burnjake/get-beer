name: deploy_lambda
on:
  push:
    branches:
      - master
jobs:
  deploy_pdf_lambda:
    name: deploy_pdf_lambda
    runs-on: ubuntu-latest
    steps:
    - name: update_lambda
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "eu-west-1"
        DYNAMODB_TABLE: "MotherKellysMenus"
        BAR_LOCATION: "stokenewington"
      run: |
        env GOOS=linux GOARCH=amd64 go build -ldflags "-X main.awsRegion=$AWS_REGION -X main.dynamoDBTable=$DYNAMODB_TABLE -X main.barLocation=$BAR_LOCATION" -o /tmp/main ./lambda
        zip -j /tmp/main.zip /tmp/main
        aws lambda update-function-code --function-name get_latest_menu --zip-file fileb:///tmp/main.zip --region $AWS_REGION
  deploy_endpoint_lambda:
    name: deploy_endpoint_lambda
    runs-on: ubuntu-latest
    steps:
    - name: update_lambda
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "eu-west-1"
        DYNAMODB_TABLE: "MotherKellysMenus"
        BAR_LOCATION: "stokenewington"
      run: |
        env GOOS=linux GOARCH=amd64 go build -ldflags "-X main.awsRegion=$AWS_REGION -X main.dynamoDBTable=$DYNAMODB_TABLE -X main.barLocation=$BAR_LOCATION" -o /tmp/main ./lambda
        zip -j /tmp/main.zip /tmp/main
        aws lambda update-function-code --function-name get_latest_menu --zip-file fileb:///tmp/main.zip --region $AWS_REGION
